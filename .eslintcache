[{"/Users/wickeyjones/Desktop/vssl-coin-challenge/src/reportWebVitals.js":"1","/Users/wickeyjones/Desktop/vssl-coin-challenge/src/index.js":"2","/Users/wickeyjones/Desktop/vssl-coin-challenge/src/Challenge.js":"3"},{"size":362,"mtime":1611691592131,"results":"4","hashOfConfig":"5"},{"size":532,"mtime":1611707309065,"results":"6","hashOfConfig":"5"},{"size":10449,"mtime":1611771775941,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nvm9t1",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/wickeyjones/Desktop/vssl-coin-challenge/src/reportWebVitals.js",[],"/Users/wickeyjones/Desktop/vssl-coin-challenge/src/index.js",["15"],"/Users/wickeyjones/Desktop/vssl-coin-challenge/src/Challenge.js",["16"],"import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport Grunge from \"./img/grunge-background.jpg\";\nimport Skull from \"./img/skeletor.svg\";\nimport DeskOne from \"./img/desks/desk-one.jpg\";\nimport DeskTwo from \"./img/desks/desk-two.jpg\";\nimport DeskThree from \"./img/desks/desk-three.jpg\";\nimport DeskFour from \"./img/desks/desk-four.jpg\";\n\nconst magicSpin = keyframes`\n0%{\n    transform:rotate(0deg)\n}\n25%{\n    transform:rotate(25deg);\n}\n50%{\n    transform:rotate(-25deg)\n}\n75%{\n    transform:rotate(25deg)\n}\n100%{\n    transform:rotate(0deg)\n}\n`;\n\nconst goldeneye = keyframes`\n0%{\n    text-shadow: 0px 0px 0px rgba(155,121,78, 0.0);\n}\n50%{\n    text-shadow: 0px 0px 10px rgba(155,121,78, 0.6);\n}\n100%{\n    text-shadow: 0px 0px 0px rgba(155,121,78, 0.0);\n}\n`;\n\nconst Container = styled.div`\n  font-family: \"Libre Franklin\", sans-serif;\n  color: white;\n  background-image: url(${Grunge});\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-auto-rows: minmax(300px, auto);\n  h3 {\n    font-size: 2rem;\n    font-weight: 200;\n  }\n  @media only screen and (max-width: 400px) {\n    grid-template-columns: repeat(1, 1fr);\n    grid-template-rows: repeat(1, 1fr);\n    padding: 0 2rem;\n  }\n`;\n\nconst HeroSection = styled.div`\n  grid-column: 3/5;\n  grid-row: 2/3;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  text-align: center;\n  img {\n    max-width: 35%;\n    animation: 10s ${magicSpin} ease-in-out infinite;\n  }\n  span {\n    color: #9b794e;\n    animation: 4s ${goldeneye} ease-in-out infinite;\n  }\n  h1 {\n    font-size: 3em;\n    text-transform: uppercase;\n    transform: rotate(8deg);\n    transition: 1s;\n  }\n  h1:hover {\n    transform: rotate(-5deg);\n  }\n  @media only screen and (max-width: 400px) {\n    h1 {\n      font-size: 2rem;\n    }\n    padding: 9rem 0 0 0;\n  }\n`;\n\nconst DirectionLine = styled.div`\n  grid-row: 3/4;\n  grid-column: 3/5;\n  border-left: 1px solid white;\n  height: 450px;\n  position: relative;\n  left: 50%;\n  top: 0;\n  @media only screen and (max-width: 400px) {\n    display: none;\n  }\n`;\n\nconst TextRow = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n`;\n\nconst CodeColumn = styled.p`\n  text-align: left;\n  font-size: 1.2rem;\n  padding: 2rem 2.5rem;\n  line-height: 2.3rem;\n  color: #a384ff;\n  background-color: black;\n  margin-bottom: 4rem;\n  span {\n    color: #5bd50d;\n  }\n`;\n\nconst AnswerRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 50px;\n  @media only screen and (max-width: 500px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 0px;\n  }\n`;\n\nconst AnswerColumn = styled.div`\n  background-color: black;\n  border: 1px solid #9b794e;\n  padding: 2rem;\n  cursor: pointer;\n  color: white;\n  transition: 0.5s;\n  :hover {\n    transform: translate(0px, -20px);\n    background-color: #9b794e;\n    color: black;\n  }\n  p {\n    text-align: left;\n  }\n`;\n\nconst QuestionOneContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  grid-row: 4/6;\n  grid-column: 2/6;\n  align-items: center;\n  text-align: center;\n`;\nconst QuestionTwoContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  grid-row: 6/8;\n  grid-column: 2/6;\n  align-items: center;\n  text-align: center;\n`;\nconst QuestionThreeContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  grid-row: 8/ 11;\n  grid-column: 2/6;\n  align-items: center;\n  text-align: center;\n`;\nconst QuestionFourContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  grid-row: 11/13;\n  grid-column: 2/6;\n  align-items: center;\n  text-align: center;\n`;\n\nconst DeskImages = styled.img`\n  max-width: 200px;\n  cursor: pointer;\n  transition: 1s;\n  :hover {\n    transform: translate(0px, 30px) scale(1.5);\n  }\n  @media only screen and (max-width: 500px) {\n    max-width: 125px;\n  }\n`;\n\nconst FinalQuestion = styled.div`\n  grid-row: 14/ 16;\n  grid-column: 1/ -1;\n  display: flex;\n  align-items: center;w\n  flex-flow: column;\n  p {\n    opacity: 0.1;\n    color: black;\n  }\n  @media only screen and (max-width: 500px) {\n    p {\n      opacity: 1;\n      color: red;\n      font-size: 2px;\n    }\n  }\n`;\nconst Challenge = () => {\n  const [questionOne, setQuestionOne] = useState(false);\n  const [questionTwo, setQuestionTwo] = useState(false);\n  const [questionThree, setQuestionThree] = useState(false);\n  const [questionFour, setQuestionFour] = useState(false);\n  const answerFunction = (answer, questionNumber) => {\n    if (answer) {\n      if (questionNumber === 1) {\n        setQuestionOne(() => true);\n      } else if (questionNumber === 2) {\n        setQuestionTwo(() => true);\n      } else if (questionNumber === 3) {\n        setQuestionThree(() => true);\n      } else if (questionNumber === 4) {\n        setQuestionFour(() => true);\n      }\n    }\n  };\n  return (\n    <Container>\n      <HeroSection>\n        <img src={Skull} />\n        <h1>\n          Your <span>adventure</span> begins here\n        </h1>\n      </HeroSection>\n      <DirectionLine></DirectionLine>\n      <QuestionOneContainer>\n        <TextRow>\n          <h3>\n            {questionOne\n              ? \"Well done!\"\n              : \"Which of these desks doesn't belong?\"}\n          </h3>\n        </TextRow>\n        <AnswerRow>\n          <DeskImages src={DeskOne} onClick={() => answerFunction(true, 1)} />\n          <DeskImages\n            src={DeskTwo}\n            onClick={() => answerFunction(false, 1)}\n            style={{ opacity: questionOne ? 0.2 : 1 }}\n          />\n          <DeskImages\n            src={DeskThree}\n            onClick={() => answerFunction(false, 1)}\n            style={{ opacity: questionOne ? 0.2 : 1 }}\n          />\n          <DeskImages\n            src={DeskFour}\n            onClick={() => answerFunction(false, 1)}\n            style={{ opacity: questionOne ? 0.2 : 1 }}\n          />\n        </AnswerRow>\n      </QuestionOneContainer>\n      <QuestionTwoContainer style={{ display: !questionOne ? \"none\" : \"flex\" }}>\n        <TextRow>\n          <h3>\n            {questionTwo\n              ? \"You are correct! (COVID cancelled our team trip to the baseball game.)\"\n              : \"Which of these is false?\"}\n          </h3>\n        </TextRow>\n        <AnswerRow>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 2)}\n            style={{ opacity: questionTwo ? 0.2 : 1 }}\n          >\n            <h4>At least one dog has pooped in the office</h4>\n          </AnswerColumn>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 2)}\n            style={{ opacity: questionTwo ? 0.2 : 1 }}\n          >\n            <h4>\n              Geoff was the first person to knock down the walls to expand the\n              VSSL office\n            </h4>\n          </AnswerColumn>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 2)}\n            style={{ opacity: questionTwo ? 0.2 : 1 }}\n          >\n            <h4>The VSSL office has two decks at it's office</h4>\n          </AnswerColumn>\n          <AnswerColumn onClick={() => answerFunction(true, 2)}>\n            <h4>VSSL once had a shout out at a Padre's game</h4>\n          </AnswerColumn>\n        </AnswerRow>\n      </QuestionTwoContainer>\n      <QuestionThreeContainer\n        style={{ display: !questionTwo ? \"none\" : \"flex\" }}\n      >\n        <TextRow>\n          <h3>\n            {questionThree\n              ? \"const answer = true\"\n              : \"What does the following code output to the console?\"}\n          </h3>\n          <CodeColumn style={{ opacity: questionThree ? 0.2 : 1 }}>\n            var vssl = [];\n            <br />\n            vssl[0] = <span>'Jake'</span>;\n            <br />\n            vssl[1] = <span>'Kayla'</span>;\n            <br />\n            vssl.dev = <span>'Andy'</span>;\n            <br />\n            <span>console.log</span>(vssl.length);\n          </CodeColumn>\n        </TextRow>\n        <AnswerRow>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 3)}\n            style={{ opacity: questionThree ? 0.2 : 1 }}\n          >\n            <h4>Kayla</h4>\n          </AnswerColumn>\n          <AnswerColumn onClick={() => answerFunction(true, 3)}>\n            <h4>2</h4>\n          </AnswerColumn>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 3)}\n            style={{ opacity: questionThree ? 0.2 : 1 }}\n          >\n            <h4>Jake, Kayla</h4>\n          </AnswerColumn>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 3)}\n            style={{ opacity: questionThree ? 0.2 : 1 }}\n          >\n            <h4>3</h4>\n          </AnswerColumn>\n        </AnswerRow>\n      </QuestionThreeContainer>\n      <QuestionFourContainer\n        style={{ display: !questionThree ? \"none\" : \"flex\" }}\n      >\n        <TextRow>\n          <h3>\n            {questionFour\n              ? \"Your final clue is around here somewhere...\"\n              : \"What is the difference between Let and Const?\"}\n          </h3>\n        </TextRow>\n        <AnswerRow>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 4)}\n            style={{ opacity: questionFour ? 0.2 : 1 }}\n          >\n            <p>\n              <strong>\"Const”</strong> constructs a variable, “Let” assigns a\n              value to it\n            </p>\n          </AnswerColumn>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 4)}\n            style={{ opacity: questionFour ? 0.2 : 1 }}\n          >\n            <p>\n              <strong>\"Const”</strong> and <strong>“Let”</strong> are the same,\n              it’s a matter of developer style\n            </p>\n          </AnswerColumn>\n          <AnswerColumn onClick={() => answerFunction(true, 4)}>\n            <p>\n              <strong>\"Const”</strong> will not change <strong>“Let”</strong>{\" \"}\n              may be reassigned\n            </p>\n          </AnswerColumn>\n          <AnswerColumn\n            onClick={() => answerFunction(false, 4)}\n            style={{ opacity: questionFour ? 0.2 : 1 }}\n          >\n            <p>\n              <strong>\"Const”</strong> constructs an object,{\" \"}\n              <strong>“Let”</strong> assigns a value to a variable\n            </p>\n          </AnswerColumn>\n        </AnswerRow>\n      </QuestionFourContainer>\n      <FinalQuestion style={{ display: !questionFour ? \"none\" : \"flex\" }}>\n        <p>You found your last clue!</p>\n      </FinalQuestion>\n    </Container>\n  );\n};\nexport default Challenge;\n",{"ruleId":"17","severity":1,"message":"18","line":1,"column":17,"nodeType":"19","messageId":"20","endLine":1,"endColumn":25},{"ruleId":"21","severity":1,"message":"22","line":234,"column":9,"nodeType":"23","endLine":234,"endColumn":28},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]